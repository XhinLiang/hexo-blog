title: 后端基本素养 - 数据敏感性
date: 2018-4-1 11:26:29
tags: [后端基本素养,随笔]
categories: 生活
toc: true
---

一个优秀的后端工程师一定需要具备对数据的高度敏感性。

在学院派的角度，可能很多地方并不是很在意数据的大小这个东西，因为很多东西可能本身就有“最优解”。


#### 排序的例子
如果需要对一个集合里的数据进行排序，在学院派（或者说初级学院派）眼里，可能马上就会想到快速排序，希尔排序，归并排序这种东西。如果是在面试的话，可能很快就能写出一段经典的快速排序算法的 C 语言实现。

但是这并不是生产环境需要解决的问题。

在生产环境中，能让你手写快速排序的地方几乎没有。各个语言都提供了快速排序的实现（而且绝大部分的情况下能提供比你手写快排更高的效率）。

在我看来，遇到这个问题的时候，应该首先反问一个几个问题：
- 这个集合的数据量有多大
- 数据保存在哪里
  - 若是内存中，是链表还是数组
  - 若不是内存中，它是分布保存的还是集中保存的
- 处理数据应该优先时间效率还是优先空间占用

OK，问完这些问题，才能开始解决问题。

数据量很小的话，怎么处理应该都无所谓。如果是长度为 10000 以内的数组，那么直接冒泡也无妨（O(N2)的时间成本也不会很高）。
数据量不小的话，根据规模来进行求解，这个不多说了。

数据已经载入内存了。
如果数据是以数组形式存在（`ArrayList` 也算），那么我们可以正常使用快排或者快排的一些变式。
如果是以链表形式存在，那么最好还是使用归并排序吧。（其实手写单链表排序也挺难的，大家可以试着写一下）

时间效率和空间效率，这个比较少问。如果空间比较充足，那么可以考虑一下使用桶排序。

根据以上一个简单的例子，我表达的想法是：在工程应用上，不会有“银弹”存在。**不存在能够适用于所有情况的方法。**

#### 关系链的例子

同样是社交，同样是基于关系链的信息流。微博和朋友圈要面对的问题完全不一样。
在朋友圈里，你可以看到所有的朋友发的动态（屏蔽除外）。
在微博里，你也可以看到你关注的所有的人的动态。
这两个场景很相似有木有！

但是由于量的区别，这两个场景的解决方案几乎完全不同。

你的好友发了一条朋友圈，腾讯可以遍历他的所有好友，然后直接把这条朋友圈写到各个好友的信息流里。不管你下拉刷新多少次，只要你的朋友们没有发新的朋友圈，你看到的都是一样的内容。

王俊凯发了一条微博，新浪 *不可能* 遍历王俊凯所有的粉丝然后各个写信息流。因为他的粉丝实在太 **TMD** 多了。至于新浪怎么做的，别问我，我也不知道。


#### IM 的例子

现在说起即时通信，大家都能想到 `Epoll` 以及一票基于 `Epoll` 实现的网络库，比如 `libevent` `Netty` `Twisted`。当然了，这些网络库基本都能实现单机 10w 以上的同时在线了。

而对于即时通信来说，最重要的不过于三点：不丢，不乱，不重。

`Epoll` 是 `Linux 2.6` 以上版本（2009 年发布）才有的功能，而那时候的腾讯 QQ 同时在线早就上亿了（具体数字不太清楚...）。

QQ 是怎么在没有 `Epoll` 的条件下实现消息的？很多人都知道是使用了 UDP 替代了 TCP，然后针对 UDP 自己实现了一套类似于 TCP 的机制。
而这套机制到底有多复杂，相信只有那段时间的一部分鹅肠员工才知道了。

后端不是 CURD，不考虑业务特性的解决方案都是扯犊子。
